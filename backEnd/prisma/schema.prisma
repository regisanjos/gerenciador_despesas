// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Usuario {
  id       Int      @id @default(autoincrement())
  nome     String
  email    String   @unique
  senha    String
  receitas Receitas[]
  despesas Despesas[]
  orcamentos Orcamento[]
  reservas Reservas[]
}

model Receitas {
  id        Int      @id @default(autoincrement())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  valor     Decimal
  data      DateTime @default(now())
  fonte     String
  recorrente Boolean @default(false)
}

model Despesas {
  id          Int      @id @default(autoincrement())
  usuario     Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
  valor       Decimal
  data        DateTime @default(now())
  categoria   Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  formaPagamento String
  descricao   String?
  recorrente  Boolean @default(false)
}

model Categoria {
  id    Int    @id @default(autoincrement())
  nome  String @unique
  despesas Despesas[]

  Orcamento Orcamento[]
}

model Orcamento {
  id        Int      @id @default(autoincrement())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  categoria Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  limite    Decimal
}

model Reservas {
  id        Int      @id @default(autoincrement())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  valor     Decimal
  descricao String?
}